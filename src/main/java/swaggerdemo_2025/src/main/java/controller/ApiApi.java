/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package swaggerdemo_2025.src.main.java.controller;

import model.Account;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-01-23T15:39:55.080689100+05:30[Asia/Calcutta]")
@Validated
@Tag(name = "api", description = "the api API")
public interface ApiApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/accounts : Create a new bank account
     *
     * @param account  (required)
     * @return Account created successfully (status code 201)
     */
    @Operation(
        operationId = "createAccount",
        summary = "Create a new bank account",
        responses = {
            @ApiResponse(responseCode = "201", description = "Account created successfully", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Account.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/accounts",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Account> createAccount(
        @Parameter(name = "Account", description = "", required = true) @Valid @RequestBody Account account
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"nominee\" : { \"address\" : { \"pincode\" : \"pincode\", \"city\" : \"city\", \"street\" : \"street\", \"id\" : 1, \"state\" : \"state\" }, \"percentage\" : 5.637377, \"name\" : \"name\", \"id\" : 5, \"relation\" : \"relation\" }, \"id\" : 0, \"accountNumber\" : \"accountNumber\", \"customer\" : { \"address\" : { \"pincode\" : \"pincode\", \"city\" : \"city\", \"street\" : \"street\", \"id\" : 1, \"state\" : \"state\" }, \"mobileNumber\" : \"mobileNumber\", \"name\" : \"name\", \"id\" : 6, \"email\" : \"email\" } }";
                    controller.ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/accounts : Get all bank accounts
     *
     * @return List of accounts (status code 200)
     */
    @Operation(
        operationId = "getAccounts",
        summary = "Get all bank accounts",
        responses = {
            @ApiResponse(responseCode = "200", description = "List of accounts", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Account.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/accounts",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Account>> getAccounts(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"nominee\" : { \"address\" : { \"pincode\" : \"pincode\", \"city\" : \"city\", \"street\" : \"street\", \"id\" : 1, \"state\" : \"state\" }, \"percentage\" : 5.637377, \"name\" : \"name\", \"id\" : 5, \"relation\" : \"relation\" }, \"id\" : 0, \"accountNumber\" : \"accountNumber\", \"customer\" : { \"address\" : { \"pincode\" : \"pincode\", \"city\" : \"city\", \"street\" : \"street\", \"id\" : 1, \"state\" : \"state\" }, \"mobileNumber\" : \"mobileNumber\", \"name\" : \"name\", \"id\" : 6, \"email\" : \"email\" } }";
                    controller.ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
